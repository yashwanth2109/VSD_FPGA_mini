# PURPOSE OF THE MODULE  
The purpose of the module named **“top”** is to implement an **FPGA RGB LED controller** using an **internal oscillator (clock)** and a **counter** (to create a slower clock signal for testing).  
This setup ensures that the LED emits **blue light** while keeping the **red and green LEDs off**.  

# DESCRIPTION OF THE INTERNAL LOGIC AND THE OSCILLATOR  

## Internal Logic  
- **led_red, led_blue, led_green** – Control the LED’s **RED, BLUE, GREEN** respectively.  
- **testwire** – Acts as a test signal, set to the 6th bit of `frequency_counter_i` to create a slower signal for testing.  
- **int_osc** – Internal oscillator signal.  
- **frequency_counter_i[27:0]** – A **28-bit counter register** that increments on the rising edge of `int_osc`.  

## Oscillator  
- **SB_HFOSC** – Hardware primitive for **high-frequency oscillators**.  
- **SB_RGBA_DRV** – Hardware primitive for **driving RGB LEDs**.  
- **CLKHF_DIV("0b10")** – Sets the oscillator frequency to **12 MHz**.  
- **CLKHFPU(1’b1)** – Powers up the oscillator.  
- **CLKHFEN(1’b1)** – Enables the oscillator.  
- **CLKHF(int_osc)** – Clock output.  

# FUNCTIONALITY OF THE RGB LED DRIVERS AND ITS RELATIONSHIP WITH THE OUTPUTS  

- **RGBLEDEN(1’b1)** – Enables the RGB LED Driver.  
- **CURREN(1’b1)** – Enables the current.  
- **RGB0PWM(1’b0)** – **Red LED OFF** (RGB0 - Red).  
- **RGB1PWM(1’b0)** – **Green LED OFF** (RGB1 - Green).  
- **RGB2PWM(1’b1)** – **Blue LED ON** (RGB2 - Blue).  
- **1’b1 = LED On**  
- **1’b0 = LED Off**  

### LED Current Settings  
```verilog
defparam RGB_DRIVER.RGB0_CURRENT = "0b000001"; // Low current for Red  
defparam RGB_DRIVER.RGB1_CURRENT = "0b000001"; // Low current for Green  
defparam RGB_DRIVER.RGB2_CURRENT = "0b000001"; // Low current for Blue  
